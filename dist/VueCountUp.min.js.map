{"version":3,"file":"VueCountUp.min.js","sources":["../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isFunction.js","../node_modules/lodash-es/isObject.js","../src/index.js"],"sourcesContent":["/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import _isFunction from 'lodash-es/isFunction';\nimport { CountUp } from 'countup.js';\n\nconst ICountUp = {\n  __countup__: CountUp,\n  name: 'ICountUp',\n  props: {\n    startOnMount: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    endVal: {\n      type: Number,\n      required: true\n    },\n    options: {\n      type: Object,\n      required: false\n    }\n  },\n  data() {\n    return {\n      instance: null\n    };\n  },\n  // computed: {},\n  watch: {\n    endVal: {\n      handler: function(value) {\n        const that = this;\n\n        if (that.instance && _isFunction(that.instance.update)) {\n          that.instance.update(value);\n        }\n      },\n      deep: false\n    }\n  },\n  methods: {\n    init() {\n      const that = this;\n      if (that.instance) {\n        return;\n      }\n\n      const dom = that.$el;\n      const instance = new CountUp(\n        dom,\n        that.endVal,\n        that.options\n      );\n\n      if (instance.error) {\n        // error\n      } else {\n        this.startOnMount\n          ? instance.start(() => that.$emit('ready', instance, CountUp))\n          : that.$emit('ready', instance, CountUp);\n        that.instance = instance;\n      }\n    },\n    uninit() {\n      const that = this;\n      that.instance = null;\n    },\n    printValue(value) {\n      const that = this;\n\n      if (that.instance && _isFunction(that.instance.printValue)) {\n        return that.instance.printValue(value);\n      }\n    },\n    start(callback) {\n      const that = this;\n\n      if (that.instance && _isFunction(that.instance.start) && _isFunction(callback)) {\n        return that.instance.start(callback);\n      }\n    },\n    pauseResume() {\n      const that = this;\n\n      if (that.instance && _isFunction(that.instance.pauseResume)) {\n        return that.instance.pauseResume();\n      }\n    },\n    reset() {\n      const that = this;\n\n      if (that.instance && _isFunction(that.instance.reset)) {\n        return that.instance.reset();\n      }\n    },\n    update(newEndVal) {\n      const that = this;\n\n      if (that.instance && _isFunction(that.instance.update)) {\n        return that.instance.update(newEndVal);\n      }\n    }\n  },\n  // beforeCreate() {\n    // const that = this;\n    // console.log('beforeCreate');\n  // },\n  // created() {\n    // const that = this;\n    // console.log('created');\n  // },\n  // beforeMount() {\n    // const that = this;\n    // console.log('beforeMount');\n  // },\n  mounted() {\n    const that = this;\n    // console.log('mounted');\n    that.init();\n  },\n  // beforeUpdate() {\n    // const that = this;\n    // console.log('beforeUpdate');\n  // },\n  // updated() {\n    // const that = this;\n    // console.log('updated');\n  // },\n  // activated() {\n    // const that = this;\n    // console.log('activated');\n  // },\n  // deactivated() {\n    // const that = this;\n    // console.log('deactivated');\n  // },\n  beforeDestroy() {\n    const that = this;\n    // console.log('beforeDestroy');\n    that.uninit();\n  },\n  // destroyed() {\n    // const that = this;\n    // console.log('destroyed');\n  // },\n  render(h) {\n    // const that = this;\n    return h('span', {});\n  }\n};\n\nexport default ICountUp;\n"],"names":["freeGlobal","global","Object","freeSelf","self","Symbol","Function","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","nullTag","undefinedTag","baseGetTag","value","isOwn","call","tag","e","result","getRawTag","objectToString","asyncTag","funcTag","genTag","proxyTag","isFunction","type","isObject","__countup__","CountUp","name","props","startOnMount","Boolean","required","default","endVal","Number","options","data","instance","watch","handler","this","_isFunction","update","deep","methods","init","that","dom","$el","error","start","$emit","uninit","printValue","callback","pauseResume","reset","newEndVal","mounted","beforeDestroy","render","h"],"mappings":"oOACA,IAAIA,EAA8B,iBAAVC,QAAsBA,QAAUA,OAAOC,SAAWA,QAAUD,OCEhFE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KCAxEC,GDGOL,GAAcG,GAAYG,SAAS,cAATA,ICHnBD,OCAdE,EAAcL,OAAOM,UAGrBC,EAAiBF,EAAYE,eAO7BC,EAAuBH,EAAYI,SAGnCC,EAAiBP,EAASA,EAAOQ,iBAAcC,ECfnD,IAOIJ,EAPcR,OAAOM,UAOcG,SCHvC,IAAII,EAAU,gBACVC,EAAe,qBAGfJ,EAAiBP,EAASA,EAAOQ,iBAAcC,EASnD,SAASG,EAAWC,GAClB,OAAa,MAATA,OACeJ,IAAVI,EAAsBF,EAAeD,EAEtCH,GAAkBA,KAAkBV,OAAOgB,GFGrD,SAAmBA,GACjB,IAAIC,EAAQV,EAAeW,KAAKF,EAAON,GACnCS,EAAMH,EAAMN,GAEhB,IACEM,EAAMN,QAAkBE,EAExB,MAAOQ,IAET,IAAIC,EAASb,EAAqBU,KAAKF,GAQvC,OANMC,EACFD,EAAMN,GAAkBS,SAEjBH,EAAMN,GAGVW,EEnBHC,CAAUN,GDNhB,SAAwBA,GACtB,OAAOR,EAAqBU,KAAKF,GCM7BO,CAAeP,GCpBrB,IAAIQ,EAAW,yBACXC,EAAU,oBACVC,EAAS,6BACTC,EAAW,iBAmBf,SAASC,EAAWZ,GAClB,ICFF,SAAkBA,GAChB,IAAIa,SAAcb,EAClB,OAAgB,MAATA,IAA0B,UAARa,GAA4B,YAARA,GDAxCC,CAASd,GACZ,OAAO,EAIT,IAAIG,EAAMJ,EAAWC,GACrB,OAAOG,GAAOM,GAAWN,GAAOO,GAAUP,GAAOK,GAAYL,GAAOQ,QE9BrD,CACfI,YAAaC,UACbC,KAAM,WACNC,MAAO,CACLC,aAAc,CACZN,KAAMO,QACNC,UAAU,EACVC,SAAS,GAEXC,OAAQ,CACNV,KAAMW,OACNH,UAAU,GAEZI,QAAS,CACPZ,KAAM7B,OACNqC,UAAU,IAGdK,sBACS,CACLC,SAAU,OAIdC,MAAO,CACLL,OAAQ,CACNM,QAAS,SAAS7B,GACH8B,KAEJH,UAAYI,EAFRD,KAEyBH,SAASK,SAFlCF,KAGNH,SAASK,OAAOhC,IAGzBiC,MAAM,IAGVC,QAAS,CACPC,oBACQC,EAAON,SACTM,EAAKT,cAIHU,EAAMD,EAAKE,IACXX,EAAW,IAAIX,UACnBqB,EACAD,EAAKb,OACLa,EAAKX,SAGHE,EAASY,aAGNpB,aACDQ,EAASa,MAAM,kBAAMJ,EAAKK,MAAM,QAASd,EAAUX,aACnDoB,EAAKK,MAAM,QAASd,EAAUX,WAClCoB,EAAKT,SAAWA,KAGpBe,kBACeZ,KACRH,SAAW,MAElBgB,oBAAW3C,MACI8B,KAEJH,UAAYI,EAFRD,KAEyBH,SAASgB,mBAFlCb,KAGCH,SAASgB,WAAW3C,IAGpCwC,eAAMI,MACSd,KAEJH,UAAYI,EAFRD,KAEyBH,SAASa,QAAUT,EAAYa,UAFxDd,KAGCH,SAASa,MAAMI,IAG/BC,0BACef,KAEJH,UAAYI,EAFRD,KAEyBH,SAASkB,oBAFlCf,KAGCH,SAASkB,eAGzBC,oBACehB,KAEJH,UAAYI,EAFRD,KAEyBH,SAASmB,cAFlChB,KAGCH,SAASmB,SAGzBd,gBAAOe,MACQjB,KAEJH,UAAYI,EAFRD,KAEyBH,SAASK,eAFlCF,KAGCH,SAASK,OAAOe,KAgBlCC,mBACelB,KAERK,QAkBPc,yBACenB,KAERY,UAMPQ,gBAAOC,UAEEA,EAAE,OAAQ"}